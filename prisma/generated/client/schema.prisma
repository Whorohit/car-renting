// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Make {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  brandname  String? @unique
  brandimage String?

  CarModal CarModal[]
}

model CarModal {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  Modal         String
  brandId       String   @db.ObjectId
  // brandname    String
  engine        String
  fuel          String
  year          String
  submodal      String
  transmission  String
  seating       Int
  coverimg      String
  frontimg      String
  sideimg       String
  backimg       String
  driven        BigInt
  drivetrain    String
  mileage       String
  price         BigInt
  Body          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userid        String   @db.ObjectId
  rating        String?
  verify        Boolean?
  Availablecity String
  des           String
  Vehicleno     String
  RentorSell    String

  brand       Make       @relation(fields: [brandId], references: [id], onDelete: Cascade)
  user        User       @relation(fields: [userid], references: [id], onDelete: Cascade)
  Watchlist   Watchlist? @relation(fields: [watchlistId], references: [id])
  watchlistId String?    @db.ObjectId

  Rent     Rent[]
  Purchase Purchase[]
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  purchase  Purchase[]
  watchlist Watchlist[]
  CarModal  CarModal[]
  Rent      Rent[]
}

model Rent {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  startdatetime       DateTime
  enddatetime         DateTime
  paymentmode         String
  userId              String   @db.ObjectId
  razorpay_order_id   String
  razorpay_payment_id String
  razorpay_signature  String
  price               BigInt
  createdAt           DateTime @default(now())
  User                User     @relation(fields: [userId], references: [id])

  CarModal   CarModal? @relation(fields: [carModalId], references: [id])
  carModalId String?   @db.ObjectId
}

model Purchase {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  price     BigInt
  createdAt DateTime @default(now())

  userId              String @db.ObjectId
  razorpay_order_id   String
  razorpay_payment_id String
  razorpay_signature  String

  User User? @relation(fields: [userId], references: [id])

  CarModal   CarModal? @relation(fields: [carModalId], references: [id])
  carModalId String?   @db.ObjectId
}

model Watchlist {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt DateTime @default(now())
  userid   String   @db.ObjectId

  user User       @relation(fields: [userid], references: [id], onDelete: Cascade)
  car  CarModal[]
}
